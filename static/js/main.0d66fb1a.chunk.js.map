{"version":3,"sources":["services/firebase.js","components/Header.js","components/Footer.js","pages/Home.js","pages/Chat.js","helpers/auth.js","pages/Signup.js","pages/Login.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","Header","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","currentUser","onClick","signOut","style","color","Footer","HomePage","Component","rooms","Chat","state","user","chats","content","readError","writeError","dbRef","openNav","document","getElementById","display","width","closeNav","loadChat","setState","ref","on","snapshot","forEach","snap","push","val","error","message","handleChange","event","target","value","handleSubmit","preventDefault","console","log","timestamp","Date","now","sender","displayName","uid","handleClick","setTimeout","window","screen","this","d","getDate","getMonth","getFullYear","getHours","getMinutes","href","class","position","marginTop","borderBottom","map","room","index","key","chat","fontSize","formatTime","onSubmit","name","placeholder","onChange","React","signup","email","password","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignUp","username","googleSignIn","Login","autoComplete","Profile","profileUpdate","update","displayProfile","updateForm","updateUserProfile","updateProfile","then","catch","PrivateRoute","component","authenticated","rest","render","props","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","basename","process","exact","path","Home","Signup","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d66fb1a.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst config ={\r\n    apiKey: \"AIzaSyDZMNNy0ANqUEH1dvcPv45CT5Z_ByU3dE0\",\r\n    authDomain: \"howdy-66dad.firebaseapp.com\",\r\n    databaseURL: \"https://howdy-66dad.firebaseio.com\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const auth = firebase.auth\r\nexport const db = firebase.database()","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-sm fixed-top navbar-dark bg-dark\">\r\n        <Link className=\"navbar-brand hover-animation\" to=\"/\">Howdy</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">\r\n          {auth().currentUser\r\n            ? <div className=\"navbar-nav\">\r\n              <Link className=\"nav-item nav-link mr-3 hover-animation\" to=\"/chat\">Chat</Link>\r\n              <Link className=\"nav-item nav-link mr-3 hover-animation\" to=\"/profile\">Profile</Link>\r\n              <button className=\"btn btn-primary mr-3 hover-animation\" onClick={() => auth().signOut()}>Logout</button>\r\n            </div>\r\n            : <div className=\"navbar-nav\">\r\n              <Link className=\"nav-item nav-link mr-3 hover-animation\" to=\"/login\">Sign In</Link>\r\n              <Link \r\n                className=\"nav-item nav-link mr-3 hover-animation\" \r\n                to=\"/signup\"\r\n                style={{color:'#007bff'}}>Sign Up\r\n            </Link>\r\n            </div>}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"pt-5\">\r\n      <div className=\"container text-center\">\r\n        <p>&copy; Howdy 2020.</p>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <Header />\r\n        <section>\r\n          <div className=\"jumbotron jumbotron-fluid py-5\">\r\n            <div className=\"container text-center py-5\">\r\n              <h1 className=\"display-4\">Welcome to Howdy</h1>\r\n              <p className=\"lead\">A great place to share your thoughts with friends</p>\r\n              <div className=\"mt-4\">\r\n                <Link className=\"btn btn-primary px-5 mr-3 hover-animation\" to=\"/signup\">Create New Account</Link>\r\n                <Link className=\"btn px-5 hover-animation\" to=\"/login\">Login to Your Account</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { auth , db } from '../services/firebase'\r\nimport Header from '../components/Header'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst rooms = ['web devs', 'andriod devs', 'designers']\r\n\r\nclass Chat extends React.Component{\r\n    state={\r\n        user: auth().currentUser,\r\n        chats: [],\r\n        content: '',\r\n        readError: null,\r\n        writeError: null,\r\n        dbRef: 'react',\r\n        rooms: rooms\r\n    }\r\n\r\n    \r\n    openNav = () =>{\r\n        document.getElementById('my-room-area').style.display =\"block\";\r\n        document.getElementById('my-room-area').style.width =\"70%\";\r\n        document.getElementById('my-chat-area').style.width = '30%'\r\n        document.getElementById('my-close-btn').style.display =\"block\";\r\n    }\r\n\r\n    closeNav =() =>{\r\n        document.getElementById('my-room-area').style.display =\"none\";\r\n        document.getElementById('my-close-btn').style.display =\"none\";\r\n    }\r\n\r\n     componentDidMount(){\r\n        this.loadChat()\r\n    }\r\n\r\n\r\n    loadChat = () =>{\r\n        \r\n\r\n        const {dbRef} = this.state\r\n        \r\n        this.setState({ readError: null})\r\n        try {\r\n            db.ref(dbRef).on(\"value\", snapshot => {\r\n                let chats = []\r\n                snapshot.forEach((snap) => {\r\n                    chats.push(snap.val())\r\n                })\r\n                this.setState({ chats })\r\n            })\r\n        } catch (error) {\r\n            this.setState({readError: error.message})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            content: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        console.log(this.state.user)\r\n        this.setState({\r\n            writeError: null\r\n        })\r\n        const {dbRef} = this.state\r\n        try {\r\n             db.ref(dbRef).push({\r\n                content: this.state.content,\r\n                timestamp: Date.now(),\r\n                sender: this.state.user.displayName,\r\n                uid: this.state.user.uid\r\n            })\r\n            this.setState({\r\n                content: ''\r\n            })\r\n        } catch (error) {\r\n            this.setState({ writeError: error.message})\r\n        }\r\n    }\r\n\r\n    handleClick = (value) =>{\r\n        this.setState({\r\n            dbRef: value\r\n        })\r\n        setTimeout(() => {\r\n            this.loadChat()\r\n        }, 100)\r\n        if(window.screen.width <= 500){\r\n            document.getElementById('my-room-area').style.display =\"none\";\r\n            document.getElementById('my-close-btn').style.display =\"none\";\r\n        }\r\n    }\r\n\r\n    formatTime(timestamp) {\r\n        const d = new Date(timestamp)\r\n        const time = `${d.getDate()}/${(d.getMonth()+1)}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`\r\n        return time\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"chat-container\">\r\n                <Header /> \r\n                <a \r\n                    id='my-close-btn'\r\n                    href='javascript: void(o)'\r\n                    class= \"close-btn\"\r\n                    onClick={this.closeNav}\r\n                />\r\n                    <div className=\"chat-box\">\r\n                        <div id='my-room-area' className=\"room-area\" style={{position:'relative'}}>\r\n                            \r\n                            <h2 style={{marginTop:'20px', borderBottom:'2px solid #575757', color:'aqua'}}>Chat Rooms</h2>\r\n                            {this.state.rooms.map((room, index) =>{\r\n                                return( \r\n                                    <div \r\n                                        key= {index} \r\n                                        className={this.state.rooms[index] === this.state.dbRef ? \"room-list-active\" : \"room-list\"} \r\n                                        onClick={() => this.handleClick(this.state.rooms[index])}\r\n                                    >       \r\n                                            <h3 >{this.state.rooms[index]}</h3>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            <h3 className=\"signed-in\">Signed in as: <Link to=\"/profile\" style={{color:'#fff'}}>{this.state.user.displayName}</Link></h3>\r\n                        </div>\r\n                        <div id='my-chat-area'>\r\n                            <div  className=\"chat-area\">\r\n                                {this.state.chats.map(chat => {\r\n                                    return (\r\n                                        <div>\r\n                                            \r\n                                            <p key={chat.timestamp} className={\"chat-bubble \" + (this.state.user.uid === chat.uid ? \"current-user\" : \"\")}>\r\n                                            <span className=\"chat-time float-left\" style={{color:'#fff', fontSize:'14px'}}>{chat.sender}</span>\r\n                                            <br />\r\n\r\n                                            {chat.content}\r\n                                            <br />\r\n                                            <span className=\"chat-time float-right\">{this.formatTime(chat.timestamp)}</span>\r\n                                            </p>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            {this.state.user.displayName === null ? \r\n                                <p className=\"text-danger\">Update your profile userName to chat</p> :\r\n                                <form id='my-type-area' onSubmit={this.handleSubmit} className=\"type-area\">\r\n                                    <button \r\n                                        onClick={this.openNav} \r\n                                        className=\"open-room-area\" \r\n                                    ></button>\r\n                                    <input \r\n                                        className=\"form-control\" \r\n                                        name=\"content\"\r\n                                        placeholder='Type a message' \r\n                                        onChange={this.handleChange} \r\n                                        value={this.state.content}\r\n                                    />\r\n                                    {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n                                    \r\n                                        <button \r\n                                            type=\"submit\" \r\n                                            className=\"send-button\" \r\n                                        ></button>\r\n                                    \r\n                                    \r\n                                </form>\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                            \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\nexport default Chat","import { auth } from '../services/firebase'\r\n\r\nexport function signup(email, password) {\r\n    return auth().createUserWithEmailAndPassword(email, password)\r\n}\r\n\r\nexport function signin(email, password) {\r\n    return auth().signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\nexport function signInWithGoogle() {\r\n   const provider = new auth.GoogleAuthProvider();\r\n   return auth().signInWithPopup(provider);  \r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signup, signInWithGoogle } from '../helpers/auth'\r\nimport Header from '../components/Header'\r\n\r\nclass SignUp extends React.Component{\r\n    state= {\r\n        email: '',\r\n        password: '',\r\n        error: null,\r\n        username: ''\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        this.setState({ error: '' })\r\n        try {\r\n            signup(this.state.email, this.state.password)\r\n        } catch (error) {\r\n            this.setState({error: error.message})\r\n        }\r\n    }\r\n    googleSignIn = () =>{\r\n        try {\r\n            signInWithGoogle()\r\n        } catch (error) {\r\n            this.setState({ error: error.message})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Header />\r\n                <form className=\"mt-5 py-5 px-5 howdy-signin\" onSubmit={this.handleSubmit}>\r\n                    <h1>\r\n                        Sign Up to\r\n                    <Link className=\"title ml-2 hover-animation\" to=\"/\">Howdy</Link>\r\n                    </h1>\r\n                    <p className=\"lead\">Fill in the form below to create an account.</p>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        {this.state.error ? <p className=\"text-danger\">{this.state.error}</p> : null}\r\n                        <button className=\"btn btn-primary px-5\" type=\"submit\">Sign up</button>\r\n                    </div>\r\n                    <p>You can also sign up with </p>\r\n                    <button className=\"btn btn-danger mr-2\" type=\"button\" onClick={this.googleSignIn}>\r\n                        Sign up with Google\r\n                    </button>\r\n                    <hr></hr>\r\n                    <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signin, signInWithGoogle} from \"../helpers/auth\";\r\nimport Header from '../components/Header'\r\n\r\nclass Login extends React.Component{\r\n    state= {\r\n        email: '',\r\n        password: '',\r\n        error: null\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        this.setState({ error: '' })\r\n        try {\r\n            signin(this.state.email, this.state.password)\r\n        } catch (error) {\r\n            this.setState({error: error.message})\r\n        }\r\n    }\r\n    googleSignIn = () =>{\r\n        try{\r\n            signInWithGoogle()\r\n        }catch (error){\r\n            this.setState({ \r\n                error: error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"container\">\r\n            <Header />\r\n            <form\r\n                className=\"mt-5 py-5 px-5 howdy-signin\"\r\n                autoComplete=\"off\"\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <h1>\r\n                    Login to\r\n                    <Link className=\"title ml-2 hover-animation\" to=\"/\">\r\n                    Howdy\r\n                    </Link>\r\n                </h1>\r\n                <p className=\"lead\">\r\n                    Fill in the form below to login to your account.\r\n                </p>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.email}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.password}\r\n                    type=\"password\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    {this.state.error ? (\r\n                    <p className=\"text-danger\">{this.state.error}</p>\r\n                    ) : null}\r\n                    <button className=\"btn btn-primary px-5 hover-animation\" type=\"submit\">Login</button>\r\n                </div>\r\n                <p>You can also log in with </p>\r\n                <button className=\"btn btn-danger mr-2 hover-animation\" type=\"button\" onClick={this.googleSignIn}>\r\n                    Sign in with Google\r\n                </button>\r\n                \r\n                <hr />\r\n                <p>\r\n                    Don't have an account? <Link className='hover-animation' to=\"/signup\">Sign up</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login","import React from 'react'\r\nimport { auth } from '../services/firebase'\r\nimport Header from '../components/Header'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Profile extends React.Component{\r\n    state ={\r\n        user: auth().currentUser,\r\n        username: 'null',\r\n        profileUpdate: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.setState({\r\n            username: this.state.user.displayName\r\n        })\r\n    }\r\n    update = () =>{\r\n        this.setState({\r\n            profileUpdate: true\r\n        })\r\n    }\r\n\r\n    displayProfile =() =>{\r\n        const {user} = this.state\r\n        return (\r\n            <div className=\"mt-5 py-5 px-5 howdy-signin user-profile\">\r\n                <Link className=\"back-button\" to=\"/chat\">chat</Link>\r\n                <h1>User Profile</h1>\r\n                <p className=\"lead\">Username: {user.displayName === null ? \"No username has been set\" : user.displayName}</p>\r\n                <p className=\"lead\">Email: {user.email}</p>\r\n                <button \r\n                    onClick={this.update}\r\n                    className=\"btn btn-primary mr-3 hover-animation\"\r\n                >Edit Profile</button>\r\n            </div>\r\n        )\r\n    }\r\n     \r\n    updateForm = () =>{\r\n        return(\r\n            <form \r\n                className=\"mt-5 py-5 px-5 howdy-signin user-profile\"\r\n                autoComplete=\"off\"\r\n                onSubmit={this.updateUserProfile}>\r\n                        <h1>Update Profile</h1>\r\n                        <div className=\"form-group\">\r\n                        <label className=\"lead\"> Username: <input \r\n                            className=\"form-control\"\r\n                            type='text'\r\n                            name='username'\r\n                            placeholder=\"Enter Username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <label className=\"lead\">\r\n                        Email: {this.state.user.email}\r\n                        </label>\r\n                        </div>\r\n                        <button \r\n                            className=\"btn btn-primary mr-3 hover-animation\" \r\n                            type='submit'\r\n                        >Update Profile</button>\r\n                    </form>\r\n        )\r\n    }\r\n\r\n    updateUserProfile =(event) => {\r\n        event.preventDefault()\r\n        const {user, username} = this.state\r\n\r\n        user.updateProfile({\r\n            displayName: username\r\n        }).then(()=>{\r\n            //update successful\r\n        }).catch(()=>{\r\n            //error message\r\n        })\r\n        this.setState({profileUpdate: false})\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {user} = this.state\r\n        \r\n        return(\r\n            <div>\r\n                <Header />\r\n                {this.state.profileUpdate === true ?\r\n                    this.updateForm()\r\n                    :\r\n                    this.displayProfile()\r\n                    \r\n                }   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react'\nimport './App.css';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport Home from './pages/Home';\nimport Chat from './pages/Chat';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { auth } from './services/firebase';\nimport Profile from './pages/Profile';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest}){\n  return(\n    <Route\n      {...rest}\n      render = {(props) => authenticated === true\n          ? <Component {...props} />\n          : <Redirect to={{pathname: '/login', state: {from: props.location} }} />}\n    />\n  )\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest}){\n  return(\n    <Route\n      {...rest}\n      render = {(props) => authenticated === false\n          ? <Component {...props} />\n          : <Redirect to='/chat' />}\n    />\n  )\n}\n\nclass App extends Component{\n  state = {\n    authenticated: false,\n    loading: true\n  }\n\n  componentDidMount(){\n    auth().onAuthStateChanged((user) => {\n      if(user) {\n        this.setState({\n          authenticated: true,\n          loading: false\n        })\n      }\n      else {\n        this.setState({\n          authenticated: false,\n          loading: false\n        })\n      }\n    })\n  }\n\n  render(){\n    return this.state.loading === true ? <h2>Loading...</h2> : (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <PrivateRoute path=\"/profile\" authenticated={this.state.authenticated} component={Profile}></PrivateRoute>\n          <PrivateRoute path=\"/chat\" authenticated={this.state.authenticated} component={Chat}></PrivateRoute>\n          <PublicRoute path=\"/signup\" authenticated={this.state.authenticated} component={Signup}></PublicRoute>\n          <PublicRoute path=\"/login\" authenticated={this.state.authenticated} component={Login}></PublicRoute>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}